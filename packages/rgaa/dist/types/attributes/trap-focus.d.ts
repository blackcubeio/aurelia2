import { IEventAggregator, ILogger, IPlatform } from "aurelia";
import { IRgaaConfiguration } from "../configure";
import { IHtmlTrapFocus } from "../interfaces/html-trap-focus-interfaces";
export declare class TrapFocus {
    private readonly options;
    private readonly logger;
    private readonly ea;
    private readonly platform;
    private readonly element;
    static attributeGroup: string;
    static attribute: string;
    name: string;
    enabled: boolean;
    private disposable;
    private focusableElements;
    private currentFocusedIndex;
    private currentGroups;
    private availableGroups;
    private keysMonitored;
    private focusableElementsQuerySelector;
    private lastFocusedElement;
    private keepFocus;
    private focusDelay;
    constructor(options?: IRgaaConfiguration, logger?: ILogger, ea?: IEventAggregator, platform?: IPlatform, element?: HTMLElement);
    attached(): void;
    detached(): void;
    dispose(): void;
    private onFocusIn;
    private onKeyDown;
    onTrapFocus: (data: IHtmlTrapFocus) => void;
    private defineTrapFocus;
    private removeTrapFocus;
    private initFocusableElementsList;
    private focusElementByIndex;
    private getFocusableElementIndex;
    private extractGroups;
    private getGroups;
    private setGroups;
    private hasGroups;
    private resetGroups;
    private initAvailableGroups;
    private handleGroups;
}
//# sourceMappingURL=trap-focus.d.ts.map